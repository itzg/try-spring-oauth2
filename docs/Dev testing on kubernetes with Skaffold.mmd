[Scia Reto](https://sciareto.org) mind map   
> __version__=`1.1`,showJumps=`true`
---

# Dev testing on kubernetes with Skaffold

## Skaffold Docs
- LINK
<pre>https://skaffold.dev/docs/</pre>

## Create OAuth2 credentials
> leftSide=`true`,topicLinkUID=`18D08B693C1A`


### Official example form Spring Security docs
- LINK
<pre>https://docs.spring.io/spring-security/reference/servlet/oauth2/login/core.html#oauth2login-sample-boot</pre>

### Spring Security redirect URI will have path<br/>/login/oauth2/code/google

#### http://localhost:8080/login/oauth2/code/google

### Add redirect URI entry for final hostname
> topicLinkUID=`18D091AA561A`


## Test locally first
> leftSide=`true`


### Run as regular Spring Boot run config

#### Add oauth2 client properties
> mmd.image=``


##### oauth2\.google\.client\-id<br/>oauth2\.google\.client\-secret

### Access page
> leftSide=`true`

- LINK
<pre>http://localhost:8080</pre>

## Create skaffold file
> leftSide=`true`


### apiVersion: skaffold/v3

#### Compatible with Cloud Code plugin vs v4 beta versions

### Example
- NOTE
<pre>apiVersion: skaffold/v3
kind: Config
metadata:
  name: try-spring-oauth2
build:
  artifacts:
    - image: ghcr.io/itzg/try-spring-oauth2
      custom:
        buildCommand: ./gradlew pushSimpleBootImage
        dependencies:
          paths:
            - build.gradle
            - src/main/java
            - src/main/resources
profiles:
  - name: windows
    build:
      artifacts:
        - image: ghcr.io/itzg/try-spring-oauth2
          custom:
            # override this since Windows needs backslash'y paths
            buildCommand: .\gradlew pushSimpleBootImage
manifests:
  rawYaml:
    - k8s/deployment.yml
    - k8s/service.yml
#    - k8s/ingress.yml
</pre>

#### Change \`image\` in both build and profiles

##### needs to match
- TOPIC
<pre>18D091C6767A</pre>

#### Ingress is purposely commented out from manifests listing

##### Deploy manually after confirming successful deploy

## Create secret for OAuth2 credentials
> leftSide=`true`


### needs
- TOPIC
<pre>18D08B693C1A</pre>

### env file
- NOTE
<pre>OAUTH2_GOOGLE_CLIENT_ID=...
OAUTH2_GOOGLE_CLIENT_SECRET=...</pre>

### create generic secret from env file
> leftSide=`true`,topicLinkUID=`18D0909733CA`

- NOTE
<pre>kubectl create secret generic try-spring-oauth2 --from-env-file=.env</pre>

## Build as Docker image
> leftSide=`true`


### Simple Boot Image Gradle Plugin
> topicLinkUID=`18D0909CBE8A`


#### Repo
- LINK
<pre>https://github.com/itzg/simple-boot-image-gradle-plugin</pre>

#### Plugin portal
> leftSide=`true`

- LINK
<pre>https://plugins.gradle.org/plugin/io.github.itzg.simple-boot-image</pre>

### needs
- TOPIC
<pre>18D091D5483A</pre>

### Add plugin
> leftSide=`true`

- NOTE
<pre>id 'io.github.itzg.simple-boot-image' version '3.2.1'</pre>

### Add extension config
> leftSide=`true`

- NOTE
<pre>simpleBootImage {
    baseImage = 'eclipse-temurin:21'
    imageName = 'ghcr.io/itzg/try-spring-oauth2'
}</pre>

#### image name needs to match
- TOPIC
<pre>18D091C6767A</pre>

## Cloud Code for IntelliJ
> leftSide=`true`,topicLinkUID=`18D08B64EF4A`

- LINK
<pre>https://cloud.google.com/code/docs/intellij/overview</pre>

## Create run config
> leftSide=`true`


### needs
- TOPIC
<pre>18D08B64EF4A</pre>

### Config type is "Cloud Code: Kubernetes"

### Set image registry<br/>ghcr\.io/itzg
> leftSide=`true`,topicLinkUID=`18D091C6767A`


### Run tab
> leftSide=`true`


#### Helpful to choose<br/>Deployment \> Switch context and deploy

### Build / Deploy tab
> leftSide=`true`


#### Choose "windows" deployemnt profile if on Windows

## Using Github Image Registry
> topicLinkUID=`18D091D5483A`


### Docker login with token that has packages write access
- LINK
<pre>https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry#pushing-container-images</pre>

### Create image pull secret in kubernetes cluster
- LINK
<pre>https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry#pulling-container-images</pre>
- NOTE
<pre>kubectl create secret docker-registry ghcr-pull --docker-server=ghcr.io --docker-username=YOUR_GITHUB_USERNAME --docker-password='ghp_...'</pre>

## Ingress setup

### Ensure public hostname
- TOPIC
<pre>18D091AA561A</pre>
